name: "siamese_videonet"
layer {
  name: "pair_data"
  type: "HDF5Data"
  top: "left"
  top: "right"
  top: "label"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "/mnt/data/h5s/training_examples.txt"
    batch_size: 30
  }
}

layer {
  name: "pair_data"
  type: "HDF5Data"
  top: "left"
  top: "right"
  top: "label"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "/mnt/data/h5s/test_examples.txt"
    batch_size: 30
  }
}

# CaffeNet

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "left"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 100
    pad: 2
    kernel_size: 3
    kernel_size: 2
    kernel_size: 2
    stride: 2
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}

# Replica Network
# Name params same as previous network.

layer {
  name: "conv1_rep"
  type: "Convolution"
  bottom: "right"
  top: "conv1_rep"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 100
    pad: 2
    kernel_size: 3
    kernel_size: 2
    kernel_size: 2
    stride: 2
    bias_term: false
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1_rep"
  type: "ReLU"
  bottom: "conv1_rep"
  top: "conv1_rep"
}
layer {
  name: "bn1_rep"
  type: "BatchNorm"
  bottom: "conv1_rep"
  top: "bn1_rep"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
}

# Recombination

layer {
  name: "recombine"
  type: "Concat"
  bottom: "bn1"
  bottom: "bn1_rep"
  top: "recombine"
  concat_param {
    axis: 1
  }
}

layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "recombine"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}

layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8"
  bottom: "label"
  top: "accuracy"
  include: {
    phase: TEST
  }
}
